{"name": "test_login_wit_verification", "status": "broken", "statusDetails": {"message": "vcr.errors.CannotOverwriteExistingCassetteException: Can't overwrite existing cassette ('C:\\\\Users\\\\Kajal\\\\fonu\\\\testCases\\\\cassettes\\\\test_signin\\\\TestSignIn.test_login_wit_verification.yaml') in your current record mode ('none').\nNo match for the request (<Request (POST) http://localhost:58835/session/1c4df8a267e54f97bd38927e584f0f6f/url>) was found.\nNo similar requests, that have not been played, found.", "trace": "self = <testCases.test_signin.TestSignIn object at 0x0000023DE24C1570>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1c4df8a267e54f97bd38927e584f0f6f\")>\n\n    @allure.feature('Sign-in with verification')\n    @allure.story('Verify successful Sign-in with verification.')\n    def test_login_wit_verification(self, setup):\n        self.logger.info(\"__Test One\")\n        self.driver = setup\n>       self.driver.get(self.baseURL)\n\ntestCases\\test_signin.py:95: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nlocal\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\nlocal\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:345: in execute\n    response = self.command_executor.execute(driver_command, params)\nlocal\\lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py:300: in execute\n    return self._request(command_info[0], url, body=data)\nlocal\\lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py:321: in _request\n    response = self._conn.request(method, url, body=body, headers=headers)\nlocal\\lib\\site-packages\\urllib3\\request.py:81: in request\n    return self.request_encode_body(\nlocal\\lib\\site-packages\\urllib3\\request.py:173: in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\nlocal\\lib\\site-packages\\urllib3\\poolmanager.py:376: in urlopen\n    response = conn.urlopen(method, u.request_uri, **kw)\nlocal\\lib\\site-packages\\urllib3\\connectionpool.py:715: in urlopen\n    httplib_response = self._make_request(\nlocal\\lib\\site-packages\\urllib3\\connectionpool.py:458: in _make_request\n    httplib_response = conn.getresponse(buffering=True)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <vcr.patch.VCRRequestsHTTPConnectionC:\\Users\\Kajal\\fonu\\testCases\\cassettes\\test_signin\\TestSignIn.test_login_wit_verification.yaml object at 0x0000023DEB05A710>\n_ = False, kwargs = {'buffering': True}\n\n    def getresponse(self, _=False, **kwargs):\n        \"\"\"Retrieve the response\"\"\"\n        # Check to see if the cassette has a response for this request. If so,\n        # then return it\n        if self.cassette.can_play_response_for(self._vcr_request):\n            log.info(f\"Playing response for {self._vcr_request} from cassette\")\n            response = self.cassette.play_response(self._vcr_request)\n            return VCRHTTPResponse(response)\n        else:\n            if self.cassette.write_protected and self.cassette.filter_request(self._vcr_request):\n>               raise CannotOverwriteExistingCassetteException(\n                    cassette=self.cassette,\n                    failed_request=self._vcr_request,\n                )\nE               vcr.errors.CannotOverwriteExistingCassetteException: Can't overwrite existing cassette ('C:\\\\Users\\\\Kajal\\\\fonu\\\\testCases\\\\cassettes\\\\test_signin\\\\TestSignIn.test_login_wit_verification.yaml') in your current record mode ('none').\nE               No match for the request (<Request (POST) http://localhost:58835/session/1c4df8a267e54f97bd38927e584f0f6f/url>) was found.\nE               No similar requests, that have not been played, found.\n\nlocal\\lib\\site-packages\\vcr\\stubs\\__init__.py:263: CannotOverwriteExistingCassetteException"}, "attachments": [{"name": "log", "source": "959be89c-2aa7-4d0a-a7b9-80310e65b6e4-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "cc1316da-4635-4500-8df7-15137c69b24b-attachment.txt", "type": "text/plain"}], "start": 1706163530090, "stop": 1706163530095, "uuid": "5c9eac7c-9f4d-4b6d-84ee-c3b680799177", "historyId": "5e1b7cf81c855df416f02f2b7d33b273", "testCaseId": "5e1b7cf81c855df416f02f2b7d33b273", "fullName": "testCases.test_signin.TestSignIn#test_login_wit_verification", "labels": [{"name": "story", "value": "Verify successful Sign-in with verification."}, {"name": "feature", "value": "Sign-in with verification"}, {"name": "tag", "value": "vcr('cassettes/httpbin_get.yaml')"}, {"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_signin"}, {"name": "subSuite", "value": "TestSignIn"}, {"name": "host", "value": "DESKTOP-KARQK2V"}, {"name": "thread", "value": "15068-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_signin"}]}