{"name": "test_table_data_in_excel", "status": "broken", "statusDetails": {"message": "KeyError: 'Members'", "trace": "self = Index(['Unnamed: 0', 'Name', 'Email', 'Team', 'Phone number', 'Role', 'Status',\n       'Unnamed: 7'],\n      dtype='object')\nkey = 'Members'\n\n    def get_loc(self, key):\n        \"\"\"\n        Get integer location, slice or boolean mask for requested label.\n    \n        Parameters\n        ----------\n        key : label\n    \n        Returns\n        -------\n        int if unique index, slice if monotonic index, else mask\n    \n        Examples\n        --------\n        >>> unique_index = pd.Index(list('abc'))\n        >>> unique_index.get_loc('b')\n        1\n    \n        >>> monotonic_index = pd.Index(list('abbc'))\n        >>> monotonic_index.get_loc('b')\n        slice(1, 3, None)\n    \n        >>> non_monotonic_index = pd.Index(list('abcb'))\n        >>> non_monotonic_index.get_loc('b')\n        array([False,  True, False,  True])\n        \"\"\"\n        casted_key = self._maybe_cast_indexer(key)\n        try:\n>           return self._engine.get_loc(casted_key)\n\nlocal\\lib\\site-packages\\pandas\\core\\indexes\\base.py:3791: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nindex.pyx:152: in pandas._libs.index.IndexEngine.get_loc\n    ???\nindex.pyx:181: in pandas._libs.index.IndexEngine.get_loc\n    ???\npandas\\_libs\\hashtable_class_helper.pxi:7080: in pandas._libs.hashtable.PyObjectHashTable.get_item\n    ???\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n>   ???\nE   KeyError: 'Members'\n\npandas\\_libs\\hashtable_class_helper.pxi:7088: KeyError\n\nThe above exception was the direct cause of the following exception:\n\nself = <testCases.test_teams.TestTeam object at 0x000002CEC7456BC0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5efd88a062fa8907a1899e1173515e60\")>\n\n    def test_table_data_in_excel(self, setup):\n        self.driver = setup\n        self.tp = TeamPage(self.driver)\n        time.sleep(3)\n>       self.tp.table_data_teams()\n\ntestCases\\test_teams.py:190: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\teams_page.py:240: in table_data_teams\n    self.common_table_data(self.tpl.table_css, \"table_data_teams\", 'CSS_SELECTOR', \"Members\")\npageObjects\\teams_page.py:235: in common_table_data\n    df[column_name] = df[column_name].str[1:]\nlocal\\lib\\site-packages\\pandas\\core\\frame.py:3893: in __getitem__\n    indexer = self.columns.get_loc(key)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = Index(['Unnamed: 0', 'Name', 'Email', 'Team', 'Phone number', 'Role', 'Status',\n       'Unnamed: 7'],\n      dtype='object')\nkey = 'Members'\n\n    def get_loc(self, key):\n        \"\"\"\n        Get integer location, slice or boolean mask for requested label.\n    \n        Parameters\n        ----------\n        key : label\n    \n        Returns\n        -------\n        int if unique index, slice if monotonic index, else mask\n    \n        Examples\n        --------\n        >>> unique_index = pd.Index(list('abc'))\n        >>> unique_index.get_loc('b')\n        1\n    \n        >>> monotonic_index = pd.Index(list('abbc'))\n        >>> monotonic_index.get_loc('b')\n        slice(1, 3, None)\n    \n        >>> non_monotonic_index = pd.Index(list('abcb'))\n        >>> non_monotonic_index.get_loc('b')\n        array([False,  True, False,  True])\n        \"\"\"\n        casted_key = self._maybe_cast_indexer(key)\n        try:\n            return self._engine.get_loc(casted_key)\n        except KeyError as err:\n            if isinstance(casted_key, slice) or (\n                isinstance(casted_key, abc.Iterable)\n                and any(isinstance(x, slice) for x in casted_key)\n            ):\n                raise InvalidIndexError(key)\n>           raise KeyError(key) from err\nE           KeyError: 'Members'\n\nlocal\\lib\\site-packages\\pandas\\core\\indexes\\base.py:3798: KeyError"}, "start": 1706166603753, "stop": 1706166606857, "uuid": "fad9db21-aa55-4f5d-a663-f2743b9a5d0f", "historyId": "6cc9ec9c7e2556a2a2c79f65c42b5ed2", "testCaseId": "6cc9ec9c7e2556a2a2c79f65c42b5ed2", "fullName": "testCases.test_teams.TestTeam#test_table_data_in_excel", "labels": [{"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_teams"}, {"name": "subSuite", "value": "TestTeam"}, {"name": "host", "value": "DESKTOP-KARQK2V"}, {"name": "thread", "value": "16180-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_teams"}]}